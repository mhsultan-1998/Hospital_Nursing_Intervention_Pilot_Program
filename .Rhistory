ggplot(data=mtcars,aes(x=wt, y=mpg, color=cyl)) + geom_point() +
labs(x = "Weight (tons)", y = "Miles Per Gallon",
title = "Effect of Vehicle Weight on Fuel Efficiency",
subtitle = "Based on mtcars data frame, 1974 Motor Trend US magazine data",
caption = "Scatter plot showing trend between fuel efficiency and weight in cars")
annualAdmissions <- function() {
df = df2 %>% group_by(Year) %>% summarise(Total_Admissions=sum(Admissions))
mc = max(df$Total_Admissions)
mr = match(mc,df$Total_Admissions)
p <- ggplot(data=df, aes(x=Year,y=Total_Admissions)) + geom_line() + geom_point() +
geom_point(data=df[mr,],aes(x=Year,y=Total_Admissions),colour="red") +
geom_text(aes(label=paste("(",Year, ", ", Total_Admissions,")", sep="")),data=df
[which.max(df$Total_Admissions),],vjust=-0.5, colour="red") +
labs(x = "Year", y = "Total Admissions",
title = "Annual Admissions in New York",
subtitle = "Based on data from the New York Substance Use Disorder Treatment Program",
caption = "Chart showing annual admissions in New York Substance Use Disorder Treatment Program")
return(p)
}
annualAdmissions()
annualAdmissions <- function() {
df = df2 %>% group_by(Year) %>% summarise(Total_Admissions=sum(Admissions))
mc = max(df$Total_Admissions)
mr = match(mc,df$Total_Admissions)
p <- ggplot(data=df, aes(x=Year,y=Total_Admissions)) + geom_line() + geom_point() +
geom_point(data=df[mr,],aes(x=Year,y=Total_Admissions),colour="red") +
geom_text(aes(label=paste("(",Year, ", ", Total_Admissions,")", sep="")),data=df
[which.max(df$Total_Admissions),],vjust=-0.5, colour="red") +
labs(x = "Year", y = "Total Admissions",
title = "Annual Admissions in New York (NY)",
subtitle = "Based on data from the New York Substance Use Disorder Treatment Program",
caption = "Chart showing annual admissions in NY Substance Use Disorder Treatment Program")
return(p)
}
annualAdmissions()
annualAdmissions <- function() {
df = df2 %>% group_by(Year) %>% summarise(Total_Admissions=sum(Admissions))
mc = max(df$Total_Admissions)
mr = match(mc,df$Total_Admissions)
p <- ggplot(data=df, aes(x=Year,y=Total_Admissions)) + geom_line() + geom_point() +
geom_point(data=df[mr,],aes(x=Year,y=Total_Admissions),colour="red") +
geom_text(aes(label=paste("(",Year, ", ", Total_Admissions,")", sep="")),data=df
[which.max(df$Total_Admissions),],vjust=-0.5, colour="red") +
labs(x = "Year", y = "Total Admissions",
title = "Annual Admissions in New York (NY)",
subtitle = "Based on data from the NY Substance Use Disorder Treatment Program",
caption = "Chart showing annual admissions in NY Substance Use Disorder Treatment Program")
return(p)
}
annualAdmissions()
ggplot(top_counties, aes(x = county_name, y = Percentage)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "County", y = "Percentage of Admissions",
title = "Percentage of Admissions by County (Top 5)",
subtitle = "Based on the highest percentage of admissions",
caption = "Chart showing the distribution of admissions percentages among the top 5 counties") +
theme(axis.text.x = element_text(angle = 45, hjust = 1), plot.caption=element_text(hjust=0.5))
View(top_counties)
top_counties$Percentage
View(df2)
df2["County"][df2["County"] == "New York"] <- "New York City"
admissions_data <- df2 %>%
mutate(Substance_Group = primary_substance_group$substance_code
[match(Substance_Group,primary_substance_group$primary_substance_group)]) %>%
mutate(Program = program_category$program_code
[match(Program,program_category$program_category)]) %>%
mutate(County = county$county_code[match(County,county$county_name)])
annualAdmissions <- function() {
df = df2 %>% group_by(Year) %>% summarise(Total_Admissions=sum(Admissions))
mc = max(df$Total_Admissions)
mr = match(mc,df$Total_Admissions)
p <- ggplot(data=df, aes(x=Year,y=Total_Admissions)) + geom_line() + geom_point() +
geom_point(data=df[mr,],aes(x=Year,y=Total_Admissions),colour="red") +
geom_text(aes(label=paste("(",Year, ", ", Total_Admissions,")", sep="")),data=df
[which.max(df$Total_Admissions),],vjust=-0.5, colour="red") +
labs(x = "Year", y = "Total Admissions",
title = "Annual Admissions in New York (NY)",
subtitle = "Based on data from the NY Substance Use Disorder Treatment Program",
caption = "Chart showing annual admissions in NY Substance Use Disorder Treatment Program")
return(p)
}
annualAdmissions()
admissions_county <- admissions_data %>% left_join(county, by = c("County" = "county_code"))
#calculate the percentage of admission of each county
county_percentage <- admissions_county %>%
group_by(county_name) %>%
summarise(Percentage = sum(Admissions) / sum(admissions_county$Admissions) * 100)
#Arrange the county percentage and select the top 5 counties percentage
top_counties <- county_percentage %>%
arrange(desc(Percentage)) %>%
head(5)
#Visualize the bar chart of the percentage of the Top 5 counties
ggplot(top_counties, aes(x = county_name, y = Percentage)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "County", y = "Percentage of Admissions",
title = "Percentage of Admissions by County (Top 5)",
subtitle = "Based on the highest percentage of admissions",
caption = "Chart showing the distribution of admissions percentages among the top 5 counties") +
theme(axis.text.x = element_text(angle = 45, hjust = 1), plot.caption=element_text(hjust=0.5))
glimpse(df2)
a <- l1[[1]]
b <- a[[1]]
c <- b[[1]]
"List (l1) -> List (a, all rows) -> List (b, a row) -> List (column/variable) -> Value (c)"
df2 <-  as.data.frame(do.call(rbind, a))
glimpse(df2)
df2$year <- as.integer(df2$year)
df2$county_of_program_location <- as.character(df2$county_of_program_location)
df2$program_category <- as.character(df2$program_category)
df2$service_type <- as.character(df2$service_type)
df2$age_group <- as.character(df2$age_group)
df2$primary_substance_group <- as.character(df2$primary_substance_group)
df2$admissions <- as.integer(df2$admissions)
df2 <- df2[1:7]
df2 <- df2 %>%
rename("County" = "county_of_program_location",
"Year" = "year",
"Service" = "service_type",
"Admissions" = "admissions",
"Program" = "program_category",
"Age_Group" = "age_group",
"Substance_Group" = "primary_substance_group")
dim(df2)
county <- tibble(county_code = c("AL","CA","CN","DE","FR","LE","MG","ON","OL","NY1","SL","SY",
"SV","WR","AG","CY","CL","DU","FU","HE","LI","NA","OD","OS",
"RE","SA","SE","TI","WS","NY2","CH","CO","ER","GE","JE","MA",
"NY3","OT","OG","NY4","SC","ST","TO","WA","BM","CM","CR","ES",
"GR","NY5","MO","NI","OR","PU","RO","SH","SU","UL","WE","WY",
"YA"),
county_name = c("Albany","Cattaraugus","Chenango","Delaware","Franklin",
"Lewis","Montgomery","Oneida","Orleans","Queens",
"Saint Lawrence","Schuyler","Sullivan","Warren","Allegany",
"Cayuga","Clinton","Dutchess","Fulton","Herkimer","Livingston",
"Nassau","Onondaga","Oswego","Rensselaer","Saratoga","Seneca",
"Tioga","Washington","Bronx","Chautauqua","Columbia","Erie",
"Genesee","Jefferson","Madison","New York City","Ontario","Otsego",
"Richmond","Schenectady","Steuben","Tompkins","Wayne","Broome",
"Chemung","Cortland","Essex","Greene","Kings","Monroe",
"Niagara","Orange","Putnam","Rockland","Schoharie","Suffolk",
"Ulster","Westchester","Wyoming","Yates"))
View(county)
Adm <- df2$Admissions
meann_Adm <- mean(Adm)
Std.Dev <- sd(Adm)
z <-(meann_Adm - Adm)/Std.Dev
z <-abs(z)
outliers_Adm <-which(z>3)
df2 <- df2[-outliers_Adm,]
"The data from this XML file is incredibly nested. It was suggested online to convert it into a
list which I did making it less nested. I still had to remove one nest before converting the
XML into a dataframe. Upon glimpsing the dataframe, I saw all my column data types were wrong so
I changed the year and admission columns to integers and the rest as characters. Also, the last
column .attrs which seemed to contain XML file information I no longer need so I dropped that
column. After that, I changed some column names just so they would be easier to refer to later.
Looking at the results from the summary function, only one column provides data that
would obviously indicate outliers; Admissions. The only other numeric column is Year, but I have
not been told whether or not I have a specific time period to work in. There's a lot of data
here so I would prefer to keep as much as I reasonably can. The maximum value for Admissions is
2861, which is definitely an outlier seeing how the mean is 41.91. So to remove the outliers, I
implemented code inspired from lecture where the outlier indices are put into a list where they
can then be used to remove their corresponding rows."
## Question 3
county <- tibble(county_code = c("AL","CA","CN","DE","FR","LE","MG","ON","OL","NY1","SL","SY",
"SV","WR","AG","CY","CL","DU","FU","HE","LI","NA","OD","OS",
"RE","SA","SE","TI","WS","NY2","CH","CO","ER","GE","JE","MA",
"NY3","OT","OG","NY4","SC","ST","TO","WA","BM","CM","CR","ES",
"GR","NY5","MO","NI","OR","PU","RO","SH","SU","UL","WE","WY",
"YA"),
county_name = c("Albany","Cattaraugus","Chenango","Delaware","Franklin",
"Lewis","Montgomery","Oneida","Orleans","Queens",
"Saint Lawrence","Schuyler","Sullivan","Warren","Allegany",
"Cayuga","Clinton","Dutchess","Fulton","Herkimer","Livingston",
"Nassau","Onondaga","Oswego","Rensselaer","Saratoga","Seneca",
"Tioga","Washington","Bronx","Chautauqua","Columbia","Erie",
"Genesee","Jefferson","Madison","New York City","Ontario","Otsego",
"Richmond","Schenectady","Steuben","Tompkins","Wayne","Broome",
"Chemung","Cortland","Essex","Greene","Kings","Monroe",
"Niagara","Orange","Putnam","Rockland","Schoharie","Suffolk",
"Ulster","Westchester","Wyoming","Yates"))
for (x in colnames(county)) {
cat(x, ": ", length((unique(county[x]))[[1]]), "\n", sep="")
}
"Duplicate county codes, not confusing at all."
df3 <- df2[,c(3,6)]
for (x in colnames(df3)) {
print((unique(df3[x]))[[1]])
print(" ")
}
program_category <- tibble(program_code = c("CR","IN","OPT","OP","R","S"),
program_category = c("Crisis","Inpatient","Opioid Treatment Program",
"Outpatient","Residential","Specialized"))
primary_substance_group <- tibble(substance_code = c("H","AO","OO","A","C","M","N"),
primary_substance_group = c("Heroin","All Others",
"Other Opioids","Alcohol",
"Cocaine","Marijuana","None"))
df2["County"][df2["County"] == "New York"] <- "New York City"
admissions_data <- df2 %>%
mutate(Substance_Group = primary_substance_group$substance_code
[match(Substance_Group,primary_substance_group$primary_substance_group)]) %>%
mutate(Program = program_category$program_code
[match(Program,program_category$program_category)]) %>%
mutate(County = county$county_code[match(County,county$county_name)])
glimpse(admissions_data)
glimpse(df2)
annualAdmissions <- function() {
df = df2 %>% group_by(Year) %>% summarise(Total_Admissions=sum(Admissions))
mc = max(df$Total_Admissions)
mr = match(mc,df$Total_Admissions)
p <- ggplot(data=df, aes(x=Year,y=Total_Admissions)) + geom_line() + geom_point() +
geom_point(data=df[mr,],aes(x=Year,y=Total_Admissions),colour="red") +
geom_text(aes(label=paste("(",Year, ", ", Total_Admissions,")", sep="")),data=df
[which.max(df$Total_Admissions),],vjust=-0.5, colour="red") +
labs(x = "Year", y = "Total Admissions",
title = "Annual Admissions in New York (NY)",
subtitle = "Based on data from the NY Substance Use Disorder Treatment Program",
caption = "Chart showing annual admissions in NY Substance Use Disorder Treatment Program")
return(p)
}
annualAdmissions()
ggplot(top_counties, aes(x = county_name, y = Percentage)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "County", y = "Percentage of Admissions",
title = "Percentage of Admissions by County (Top 5)",
subtitle = "Based on the highest percentage of admissions",
caption = "Chart showing the distribution of admissions percentages among the top 5 counties") +
theme(axis.text.x = element_text(angle = 45, hjust = 1), plot.caption=element_text(hjust=0.5))
a <- l1[[1]]
b <- a[[1]]
c <- b[[1]]
"List (l1) -> List (a, all rows) -> List (b, a row) -> List (column/variable) -> Value (c)"
df2 <-  as.data.frame(do.call(rbind, a))
glimpse(df2)
df2$year <- as.integer(df2$year)
df2$county_of_program_location <- as.character(df2$county_of_program_location)
df2$program_category <- as.character(df2$program_category)
df2$service_type <- as.character(df2$service_type)
df2$age_group <- as.character(df2$age_group)
df2$primary_substance_group <- as.character(df2$primary_substance_group)
df2$admissions <- as.integer(df2$admissions)
df2 <- df2[1:7]
df2 <- df2 %>%
rename("County" = "county_of_program_location",
"Year" = "year",
"Service" = "service_type",
"Admissions" = "admissions",
"Program" = "program_category",
"Age_Group" = "age_group",
"Substance_Group" = "primary_substance_group")
dim(df2)
summary(df2)
sapply(df2, function(x) sum(is.na(x)))
for (x in colnames(df2)) {
cat(x, ": ", length((unique(df2[x]))[[1]]), "\n", sep="")
}
# ggplot(data=df2, aes(x=admissions)) + geom_histogram() + scale_y_log10()
Adm <- df2$Admissions
meann_Adm <- mean(Adm)
Std.Dev <- sd(Adm)
z <-(meann_Adm - Adm)/Std.Dev
z <-abs(z)
outliers_Adm <-which(z>3)
df2 <- df2[-outliers_Adm,]
county <- tibble(county_code = c("AL","CA","CN","DE","FR","LE","MG","ON","OL","NY1","SL","SY",
"SV","WR","AG","CY","CL","DU","FU","HE","LI","NA","OD","OS",
"RE","SA","SE","TI","WS","NY2","CH","CO","ER","GE","JE","MA",
"NY3","OT","OG","NY4","SC","ST","TO","WA","BM","CM","CR","ES",
"GR","NY5","MO","NI","OR","PU","RO","SH","SU","UL","WE","WY",
"YA"),
county_name = c("Albany","Cattaraugus","Chenango","Delaware","Franklin",
"Lewis","Montgomery","Oneida","Orleans","Queens",
"Saint Lawrence","Schuyler","Sullivan","Warren","Allegany",
"Cayuga","Clinton","Dutchess","Fulton","Herkimer","Livingston",
"Nassau","Onondaga","Oswego","Rensselaer","Saratoga","Seneca",
"Tioga","Washington","Bronx","Chautauqua","Columbia","Erie",
"Genesee","Jefferson","Madison","New York City","Ontario","Otsego",
"Richmond","Schenectady","Steuben","Tompkins","Wayne","Broome",
"Chemung","Cortland","Essex","Greene","Kings","Monroe",
"Niagara","Orange","Putnam","Rockland","Schoharie","Suffolk",
"Ulster","Westchester","Wyoming","Yates"))
for (x in colnames(county)) {
cat(x, ": ", length((unique(county[x]))[[1]]), "\n", sep="")
}
for (x in colnames(df2)) {
cat(x, ": ", length((unique(df2[x]))[[1]]), "\n", sep="")
}
df2_ <- df2 %>% select(County)
for (x in colnames(df2_)) {
print(unique(df2_[x]))
}
df2_ <- df2 %>% select(County=="New York")
for (x in df2_$County) {
if (x=="New York") {
cat(1)
}
}
df2["County"][df2["County"] == "New York"] <- "New York City"
for (x in df2$County) {
if (x=="New York") {
cat(1)
}
}
for (x in df2$County) {
if (x=="New York City") {
cat(1)
}
}
ggplot(top_counties, aes(x = county_name, y = Percentage)) +
geom_bar(stat = "identity", fill = "blue")
admissions_data <- df2 %>%
mutate(Substance_Group = primary_substance_group$substance_code
[match(Substance_Group,primary_substance_group$primary_substance_group)]) %>%
mutate(Program = program_category$program_code
[match(Program,program_category$program_category)]) %>%
mutate(County = county$county_code[match(County,county$county_name)])
admissions_county <- admissions_data %>% left_join(county, by = c("County" = "county_code"))
#calculate the percentage of admission of each county
county_percentage <- admissions_county %>%
group_by(county_name) %>%
summarise(Percentage = sum(Admissions) / sum(admissions_county$Admissions) * 100)
#Arrange the county percentage and select the top 5 counties percentage
top_counties <- county_percentage %>%
arrange(desc(Percentage)) %>%
head(5)
#Visualize the bar chart of the percentage of the Top 5 counties
ggplot(top_counties, aes(x = county_name, y = Percentage)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "County", y = "Percentage of Admissions",
title = "Percentage of Admissions by County (Top 5)",
subtitle = "Based on the highest percentage of admissions",
caption = "Chart showing the distribution of admissions percentages among the top 5 counties") +
theme(axis.text.x = element_text(angle = 45, hjust = 1), plot.caption=element_text(hjust=0.5))
top_counties$county_name
top_counties$Percentage
admissions_county <- admissions_data %>% left_join(county, by = c("County" = "county_code"))
#calculate the percentage of admission of each county
county_percentage <- admissions_county %>%
group_by(county_name) %>%
summarise(Percentage = sum(Admissions) / sum(admissions_county$Admissions) * 100)
#Arrange the county percentage and select the top 5 counties percentage
top_counties <- county_percentage %>%
arrange(desc(Percentage)) %>%
head(5)
#Visualize the bar chart of the percentage of the Top 5 counties
ggplot(top_counties, aes(x = county_name, y = Percentage)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "County", y = "Percentage of Admissions",
title = "Percentage of Admissions by County (Top 5)",
subtitle = "Based on the highest percentage of admissions",
caption = "Chart showing the distribution of admissions percentages among the top 5 counties") +
theme(axis.text.x = element_text(angle = 45, hjust = 1), plot.caption=element_text(hjust=0.5))
## Question 6
# Filter data for admissions to rehab|rehabilitation facilities
filtered_data <- admissions_data %>%
filter(str_detect(Service, regex("rehab|rehabilitation", ignore_case = TRUE)))
# Identify most prominent substance by age group
# prominent_substances <- filtered_data %>%
#   group_by(Age_Group) %>%
#   summarise(Most_Prominent_Substance = Substance_Group[which.max(Admissions)],
#             Adm_percentage=(which.max(Admissions)/sum(Admissions)*100))
#
prominent_substances <- filtered_data %>%
group_by(Age_Group) %>%
summarise(Most_Prominent_Substance = Substance_Group[which.max(Admissions)], Adm=sum(Admissions))
prominent_substances <- prominent_substances %>%
mutate(Most_Prominent_Substance = primary_substance_group$primary_substance_group
[match(Most_Prominent_Substance,primary_substance_group$substance_code)])
# Visualize most prominent substances by age group
ggplot(prominent_substances, aes(x = Age_Group, y = Adm, fill=Most_Prominent_Substance)) +
geom_bar(stat = "identity") +
labs(x = "Age Group", y = "Admissions",
title = "Most Prominent Substance by Age Group",
subtitle = "Based on admissions to rehab facilities",
caption = "Chart showing admissions of the most prominent substances in different age groups") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),plot.caption=element_text(hjust=0.5)) +
guides(fill=guide_legend(title="Substances"))
ggplot(data=mtcars,aes(x=hp, y=qsec)) + geom_point()
df1[1,2]
df1[2:4,]
df1[,ncol(df1)]
knitr::opts_chunk$set(echo = TRUE)
annualAdmissions <- function() {
df = df2 %>% group_by(Year) %>% summarise(Total_Admissions=sum(Admissions))
mc = max(df$Total_Admissions)
mr = match(mc,df$Total_Admissions)
p <- ggplot(data=df, aes(x=Year,y=Total_Admissions)) + geom_line() + geom_point() +
geom_point(data=df[mr,],aes(x=Year,y=Total_Admissions),colour="red") +
geom_text(aes(label=paste("(",Year, ", ", Total_Admissions,")", sep="")),data=df
[which.max(df$Total_Admissions),],vjust=-0.5, colour="red") +
labs(x = "Year", y = "Total Admissions",
title = "Annual Admissions in New York (NY)",
subtitle = "Based on data from the NY Substance Use Disorder Treatment Program",
caption = "Chart showing annual admissions in NY Substance Use Disorder Treatment Program")
+ theme(plot.caption=element_text(hjust=0.5))
return(p)
}
annualAdmissions()
annualAdmissions <- function() {
df = df2 %>% group_by(Year) %>% summarise(Total_Admissions=sum(Admissions))
mc = max(df$Total_Admissions)
mr = match(mc,df$Total_Admissions)
p <- ggplot(data=df, aes(x=Year,y=Total_Admissions)) + geom_line() + geom_point() +
geom_point(data=df[mr,],aes(x=Year,y=Total_Admissions),colour="red") +
geom_text(aes(label=paste("(",Year, ", ", Total_Admissions,")", sep="")),data=df
[which.max(df$Total_Admissions),],vjust=-0.5, colour="red") +
labs(x = "Year", y = "Total Admissions",
title = "Annual Admissions in New York (NY)",
subtitle = "Based on data from the NY Substance Use Disorder Treatment Program",
caption = "Chart showing annual admissions in NY Substance Use Disorder Treatment Program") + theme(plot.caption=element_text(hjust=0.5))
return(p)
}
annualAdmissions()
annualAdmissions <- function() {
df = df2 %>% group_by(Year) %>% summarise(Total_Admissions=sum(Admissions))
mc = max(df$Total_Admissions)
mr = match(mc,df$Total_Admissions)
p <- ggplot(data=df, aes(x=Year,y=Total_Admissions)) + geom_line() + geom_point() +
geom_point(data=df[mr,],aes(x=Year,y=Total_Admissions),colour="red") +
geom_text(aes(label=paste("(",Year, ", ", Total_Admissions,")", sep="")),data=df
[which.max(df$Total_Admissions),],vjust=-0.4, colour="red") +
labs(x = "Year", y = "Total Admissions",
title = "Annual Admissions in New York (NY)",
subtitle = "Based on data from the NY Substance Use Disorder Treatment Program",
caption = "Chart showing annual admissions in NY Substance Use Disorder Treatment Program") + theme(plot.caption=element_text(hjust=0.5))
return(p)
}
annualAdmissions()
ggplot(data=mtcars,aes(x=wt, y=mpg, color=cyl)) + geom_point() +
labs(x = "Weight (tons)", y = "Miles Per Gallon",
title = "Effect of Vehicle Weight on Fuel Efficiency",
subtitle = "Based on mtcars data frame, 1974 Motor Trend US magazine data",
caption = "Scatter plot showing trend between fuel efficiency and weight in cars") + theme(plot.caption=element_text(hjust=0.5))
knitr::opts_chunk$set(echo = TRUE)
library(RSQLite)
library(DBI)
library(XML)
library(xml2)
library(RCurl)
library(dplyr)
library(stringr)
library(tidyverse)
library(ggplot2)
library(tidyr)
library(lubridate)
library(scales)
library(readr)
mydb <- dbConnect(SQLite())
?dbConnect
bed_type <- read.csv("bed_type.csv", stringsAsFactors = FALSE)
bed_fact <- read.csv("bed_fact.csv", stringsAsFactors = FALSE)
business <- read.csv("business.csv", stringsAsFactors = FALSE)
dbWriteTable(mydb, "bed_type", bed_type, append = TRUE)
dbWriteTable(mydb, "bed_fact", bed_fact, append = TRUE)
dbWriteTable(mydb, "business", business, append = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(RSQLite)
library(DBI)
library(XML)
library(xml2)
library(RCurl)
library(dplyr)
library(stringr)
library(tidyverse)
library(ggplot2)
library(tidyr)
library(lubridate)
library(scales)
library(readr)
mydb <- dbConnect(RSQLite::SQLite())
bed_type <- read.csv("bed_type.csv", stringsAsFactors = FALSE)
bed_fact <- read.csv("bed_fact.csv", stringsAsFactors = FALSE)
business <- read.csv("business.csv", stringsAsFactors = FALSE)
dbWriteTable(mydb, "bed_type", bed_type, append = TRUE)
dbWriteTable(mydb, "bed_fact", bed_fact, append = TRUE)
dbWriteTable(mydb, "business", business, append = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(RSQLite)
library(DBI)
library(XML)
library(xml2)
library(RCurl)
library(dplyr)
library(stringr)
library(tidyverse)
library(ggplot2)
library(tidyr)
library(lubridate)
library(scales)
library(readr)
mydb <- dbConnect(RSQLite::SQLite())
bed_type <- read.csv("bed_type.csv", stringsAsFactors = FALSE)
setwd("C:/Users/mirha/Desktop/NEU Stuff/DA5020/Practicum 2")
knitr::opts_chunk$set(echo = TRUE)
library(RSQLite)
library(DBI)
library(XML)
library(xml2)
library(RCurl)
library(dplyr)
library(stringr)
library(tidyverse)
library(ggplot2)
library(tidyr)
library(lubridate)
library(scales)
library(readr)
mydb <- dbConnect(RSQLite::SQLite())
bed_type <- read.csv("bed_type.csv", stringsAsFactors = FALSE)
bed_fact <- read.csv("bed_fact.csv", stringsAsFactors = FALSE)
business <- read.csv("business.csv", stringsAsFactors = FALSE)
dbWriteTable(mydb, "bed_type", bed_type, append = TRUE)
dbWriteTable(mydb, "bed_fact", bed_fact, append = TRUE)
dbWriteTable(mydb, "business", business, append = TRUE)
